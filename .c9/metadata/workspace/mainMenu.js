{"changed":true,"filter":false,"title":"mainMenu.js","tooltip":"/mainMenu.js","value":"\nBasicGame.MainMenu = function (game) {\n\n  this.music = null;\n  this.playButton = null;\n\n};\n\nBasicGame.MainMenu.prototype = {\n\n  create: function () {\n\n    //  We've already preloaded our assets, so let's kick right into the Main Menu itself.\n    //  Here all we're doing is playing some music and adding a picture and button\n    //  Naturally I expect you to do something significantly better :)\n\n    this.add.sprite(0, 0, 'titlepage');\n\n    this.loadingText = this.add.text(510, 520, \"Press Z or tap/click game to start\", { font: \"24px monospace\", fill: \"#fff\" });\n    this.loadingText.anchor.setTo(0.5, 0.5);\n    this.add.text(510, 680, \"image assets Copyright (c) 2002 Ari Feldman\", { font: \"16px monospace\", fill: \"#fff\", align: \"center\"}).anchor.setTo(0.5, 0.5);\n    this.add.text(510, 700, \"sound assets Copyright (c) 2012 - 2013 Devin Watson\", { font: \"16px monospace\", fill: \"#fff\", align: \"center\"}).anchor.setTo(0.5, 0.5);\n\n  },\n\n  update: function () {\n\n    if (this.input.keyboard.isDown(Phaser.Keyboard.Z) || this.input.activePointer.isDown) {\n      this.startGame();\n    }\n    //  Do some nice funky main menu effect here\n\n  },\n  \n  render: function () {\n    //  Every loop we need to render the un-scaled game canvas to the displayed scaled canvas:\n    // pixel.context.drawImage(this.canvas, 0, 0, this.width, this.height, 0, 0, pixel.width, pixel.height);\n  },\n\n  startGame: function (pointer) {\n\n    //  Ok, the Play Button has been clicked or touched, so let's stop the music (otherwise it'll carry on playing)\n    // this.music.stop();\n\n    //  And start the actual game\n    this.state.start('Game');\n\n  }\n\n};\n","undoManager":{"mark":2,"position":3,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":32,"column":4},"end":{"row":33,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":33,"column":0},"end":{"row":33,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":33,"column":2},"end":{"row":34,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":34,"column":0},"end":{"row":34,"column":2}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":34,"column":2},"end":{"row":34,"column":23}},"text":"render: function () {"},{"action":"insertText","range":{"start":{"row":34,"column":23},"end":{"row":35,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":35,"column":0},"end":{"row":37,"column":0}},"lines":["    //  Every loop we need to render the un-scaled game canvas to the displayed scaled canvas:","    pixel.context.drawImage(this.canvas, 0, 0, this.width, this.height, 0, 0, pixel.width, pixel.height);"]},{"action":"insertText","range":{"start":{"row":37,"column":0},"end":{"row":37,"column":4}},"text":"  },"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":4},"end":{"row":36,"column":7}},"text":"// "}]}]]},"ace":{"folds":[],"scrolltop":120,"scrollleft":0,"selection":{"start":{"row":36,"column":7},"end":{"row":36,"column":7},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":67,"mode":"ace/mode/javascript"}},"timestamp":1407049969384}